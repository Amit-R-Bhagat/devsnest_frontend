{"version":3,"sources":["components/EditButton.jsx","components/Delete.Button.jsx","components/DoneButton.jsx","components/Card.jsx","App.js","reportWebVitals.js","index.js"],"names":["EditButton","isEditing","setIsEditing","className","onClick","DeleteButton","items","setItems","index","newItems","filter","item","i","DoneButton","food","calo","updatedItem","name","calorie","changedItems","splice","Card","useState","setFood","setCalo","type","id","value","onChange","e","target","App","setItem","cal","setCal","placeholder","required","length","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1fb1b2b.chunk.js","sourcesContent":["export default function EditButton ({isEditing,setIsEditing}){\r\n    return (\r\n        <button className=\"edit\" onClick={()=>(setIsEditing(!isEditing))}>Edit</button>\r\n    )\r\n}","export default function DeleteButton ({items, setItems, index}){\r\n    return (\r\n        <button className=\"delete\" onClick={()=>{\r\n            let newItems = items.filter((item,i)=> i !== index )\r\n            setItems(newItems);\r\n        }}>Delete</button>\r\n    )\r\n}","export default function DoneButton ({isEditing,setIsEditing,food,calo,items,setItems,index}){\r\n    return (\r\n        <button className=\"done\" onClick={()=>{\r\n            let updatedItem = {\r\n                name: food,\r\n                calorie: calo\r\n            }\r\n            let changedItems = [...items];\r\n            changedItems.splice(index,1,updatedItem)\r\n            setItems(changedItems);\r\n            setIsEditing(!isEditing);\r\n        }}>Done</button>\r\n    )\r\n}","import { useState } from \"react\"\r\nimport EditButton from \"./EditButton\";\r\nimport DeleteButton from \"./Delete.Button\"\r\nimport DoneButton from \"./DoneButton\";\r\nexport default function Card ({name, calorie, items, setItems,index}){\r\n    const [food,setFood] = useState(name)\r\n    const [calo,setCalo] = useState(calorie)\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    \r\n    return (\r\n            <div className=\"card\">\r\n                {!isEditing ? <div className=\"content\"><h3>{name}</h3>\r\n                <p>You have consumed {calorie} calories.</p></div>:<>\r\n                <input type=\"text\" id=\"title\" name=\"title\" value ={food} onChange={(e) => (setFood(e.target.value))}></input>\r\n                <input type=\"number\" id=\"calorie\" name=\"calorie\" value ={calo} onChange={(e) => (setCalo(e.target.value))}></input>\r\n                </>\r\n                }\r\n                <DeleteButton items={items} setItems={setItems} index={index} />\r\n                {!isEditing ? <EditButton isEditing={isEditing} setIsEditing={setIsEditing}/> : <DoneButton isEditing={isEditing} setIsEditing={setIsEditing} food={food} calo={calo} items={items} setItems={setItems} index={index} />}\r\n                \r\n            </div>\r\n            \r\n    )\r\n}","import './App.css';\nimport {useState} from 'react'\nimport Card from './components/Card';\nfunction App() {\n  const [item, setItem] = useState(\"\");\n  const [cal,setCal] = useState(\"\");\n  const [items, setItems] = useState([\n    {name: \"pizza\", calorie: \"100\"},\n  ])\n\n  function handleSubmit (e){\n    // e.preventDefault();\n    if(item && cal){\n      setItems([...items,{name: item, calorie: cal}])\n      setItem(\"\");\n      setCal(\"\");\n    }\n    \n  }\n\n  return (\n    <div className=\"App\">\n      <form>\n        <input type=\"text\" name=\"title\" value ={item} placeholder=\"Item name\" onChange = {e => (setItem(e.target.value))} required></input>\n        <input type=\"number\" name=\"calorie\" value ={cal} placeholder=\"Calorie\" onChange = {e => (setCal(e.target.value))} required></input><br></br>\n        <button onClick={handleSubmit}>Add Item</button>\n      </form>\n      \n      {\n        items.length ? items.map((item, index) => (\n          <div  key={index} className=\"item\">\n            <Card name={item.name} calorie={item.calorie} items={items} setItems={setItems} index={index}></Card>\n            \n          </div>\n        )): <h1>Start Adding Items</h1>\n      }\n      \n\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}